apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply plugin: "com.github.ben-manes.versions"

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        
        applicationId "com.kotlinandroidstarter.app"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        dataBinding {
            enabled = true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    signingConfigs {

        debug {
            storeFile project.rootProject.file('debug.jks').getCanonicalFile()
            storePassword "android"
            keyAlias "debug"
            keyPassword "android"
        }
        
        release {
            storeFile project.rootProject.file('Todo.jks').getCanonicalFile()
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEY_ALIAS")
            keyPassword System.getenv("KEY_PASSWORD")
        }
        
    }

    buildTypes {
        
        all {
            minifyEnabled false
        }
        
        debug {
            debuggable true
            versionNameSuffix "-DEBUG"
            applicationIdSuffix '.dev'
            signingConfig signingConfigs.debug
            buildConfigField "String", "API_BASE_URL", "\"https://jsonplaceholder.typicode.com\""
        }
        
        release {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_BASE_URL", "\"https://jsonplaceholder.typicode.com\""

        }
        
    }
    
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    
    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries true
    }

    packagingOptions {
        exclude 'META-INF/core.kotlin_module'
        exclude 'META-INF/main.kotlin_module'
    }

}

configurations.all {
    //resolutionStrategy.force 'org.jetbrains.kotlin:kotlin-reflect:1.0.6'
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    resolutionStrategy.force "com.google.android.gms:play-services-gcm:${versions.playServices}"
}

/*android.buildTypes.each { type ->
    type.buildConfigField 'String', 'FOO_KEY', FOO_KEY
}*/

androidExtensions {
    experimental = true
}

dependencies {
    
    // Testing
    /*androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'org.jetbrains.spek:spek-apiService:1.1.2'
    implementation 'org.jetbrains.spek:spek-junit-platform-engine:1.1.2'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'org.amshove.kluent:kluent:1.25'
    testImplementation 'org.mockito:mockito-core:2.10.0'
    testImplementation 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
    testImplementation 'io.kotlintest:kotlintest:2.0.4'
    androidTestImplementation "com.android.support:support-annotations:$AndroidSupportLibVersion"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'*/
    
    implementation libraries.kotlin
    implementation libraries.coroutines
    
    implementation libraries.recyclerview
    implementation libraries.constraintlayout
    implementation libraries.cardview
//    implementation libraries.browser
    
    implementation libraries.androidKtx
    implementation libraries.fragmentsKtx
    
//    implementation libraries.flexbox
    implementation libraries.material
    
//    implementation libraries.room
//    kapt libraries.roomProcessor
    implementation libraries.lifecycleExtensions
    kapt libraries.lifecycleCompiler
    implementation libraries.viewmodelKtx
    implementation libraries.livedataKtx
    implementation libraries.workmanager
//    implementation libraries.paging
    
    implementation libraries.legacy
    implementation libraries.legacyUtils
    implementation libraries.legacyUI
    
    implementation libraries.koin
    implementation libraries.koinViewModel
    
    implementation libraries.timber
    implementation libraries.hawk
    
    //VAR:RX implementation libraries.rxKotlin
    //VAR:RX implementation libraries.rxAndroid
    
    implementation libraries.materialDesignIcons
    
    implementation libraries.moshi
    implementation libraries.okhttp
    implementation libraries.okhttpLogger
    
    implementation libraries.retrofit
    implementation libraries.retrofitMoshi
    implementation libraries.retrofitLogging
    
    implementation libraries.threeTenABP
    
    implementation libraries.glide
    kapt libraries.glideProcessor
    
    kapt libraries.kotshiCompiler
    implementation libraries.kotshiApi
    
    // Proprietary libraries
    //implementation libraries.fcm
    //implementation libraries.firebaseAnalytics
    //implementation libraries.playServicesAuth
    //implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') { transitive = true }
    //implementation('com.crashlytics.sdk.android:answers:1.4.3@aar') { transitive = true }
    
    testImplementation libraries.junit
    testImplementation libraries.truth
    androidTestImplementation libraries.espressoCore
    androidTestImplementation libraries.espressoIntents
    
}
